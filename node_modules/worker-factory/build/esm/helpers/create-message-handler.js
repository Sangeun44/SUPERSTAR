var _this = this;
import * as tslib_1 from "tslib";
import { renderMethodNotFoundError, renderMissingResponseError, renderUnexpectedResultError } from './error-renderers';
export var createMessageHandler = function (receiver, workerImplementation, isSupportingTransferables) {
    return function (_a) {
        var _b = _a.data, id = _b.id, method = _b.method, params = _b.params;
        return tslib_1.__awaiter(_this, void 0, void 0, function () {
            var messageHandler, response, asynchronousResponse, _c, result, _d, transferables, _e, _f, _g, _h, result, _j, transferables, _k, _l, _m, err_1, _o, message, _p, status;
            return tslib_1.__generator(this, function (_q) {
                switch (_q.label) {
                    case 0:
                        messageHandler = workerImplementation[method];
                        _q.label = 1;
                    case 1:
                        _q.trys.push([1, 8, , 9]);
                        if (messageHandler === undefined) {
                            throw renderMethodNotFoundError({ method: method });
                        }
                        response = messageHandler(params);
                        if (response === undefined) {
                            throw renderMissingResponseError({ method: method });
                        }
                        if (!(id === null)) return [3 /*break*/, 2];
                        if (response.result !== undefined) {
                            throw renderUnexpectedResultError({ method: method });
                        }
                        return [3 /*break*/, 7];
                    case 2:
                        if (!(response instanceof Promise)) return [3 /*break*/, 5];
                        return [4 /*yield*/, response];
                    case 3:
                        asynchronousResponse = _q.sent();
                        if (asynchronousResponse.result === undefined) {
                            throw renderUnexpectedResultError({ method: method });
                        }
                        _c = asynchronousResponse, result = _c.result, _d = _c.transferables, transferables = _d === void 0 ? [] : _d;
                        _f = (_e = receiver).postMessage;
                        _g = [{ id: id, result: result }];
                        return [4 /*yield*/, isSupportingTransferables];
                    case 4:
                        _f.apply(_e, _g.concat([(_q.sent()) ? transferables : []]));
                        return [3 /*break*/, 7];
                    case 5:
                        if (response.result === undefined) {
                            throw renderUnexpectedResultError({ method: method });
                        }
                        _h = response, result = _h.result, _j = _h.transferables, transferables = _j === void 0 ? [] : _j;
                        _l = (_k = receiver).postMessage;
                        _m = [{ id: id, result: result }];
                        return [4 /*yield*/, isSupportingTransferables];
                    case 6:
                        _l.apply(_k, _m.concat([(_q.sent()) ? transferables : []]));
                        _q.label = 7;
                    case 7: return [3 /*break*/, 9];
                    case 8:
                        err_1 = _q.sent();
                        _o = err_1, message = _o.message, _p = _o.status, status = _p === void 0 ? -32603 : _p;
                        receiver.postMessage({ error: { code: status, message: message }, id: id });
                        return [3 /*break*/, 9];
                    case 9: return [2 /*return*/];
                }
            });
        });
    };
};
//# sourceMappingURL=/build/es2015/helpers/create-message-handler.js.map